---
interface Props {
	roomId: string
}

const { roomId } = Astro.props;
---

<h1 class="text-2xl font-bold" id="room-name" data-room-id={roomId}><slot /></h1>
<script>
    const roomElement = document.getElementById("room-name") as HTMLInputElement;    
  
    const edit = () => {
      if (!roomElement) return;
      roomElement.innerHTML = `<input type="text" value="${roomElement.innerHTML}" id="room-name-edit" class="border border-gray-300 rounded-md px-4 py-2 w-full focus:outline-none focus:ring-2 focus:ring-blue-500" minlength="3" maxlength="50" />`;
      roomElement.removeEventListener("click", edit);
      const roomEditElement = document.getElementById("room-name-edit") as HTMLInputElement;
      if (!roomEditElement) return;
      roomEditElement.focus();
      roomEditElement.addEventListener("keydown", acceptEdit);
      roomEditElement.addEventListener("blur", acceptEdit);
    };
  
    const acceptEdit = (event: KeyboardEvent | FocusEvent) => {
      const roomEditElement = document.getElementById(
        "room-name-edit"
      ) as HTMLInputElement;
      if (!roomEditElement) return;
  
      if ((event instanceof KeyboardEvent && event.key === "Enter") || event instanceof FocusEvent) {
        fetch(`/api/room/${roomElement.dataset.roomId}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({name: roomEditElement.value})
        });
        roomElement.innerHTML = roomEditElement.value;
        roomElement.addEventListener("click", edit);
      }
    };
  
    if (roomElement) {
      roomElement.addEventListener("click", edit);
    }
  </script>